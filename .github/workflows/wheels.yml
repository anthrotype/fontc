name: Wheels

on:
  # only run on version-tagged commits or manually
  push:
    tags: ["v*.*.*"]
  # enables workflow to be run manually
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:

# read-only access to repo contents by default; specific jobs may override it
# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.platform.target }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - target: x86_64-apple-darwin
            os: macos-latest
            python-architecture: x64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            python-architecture: x64
          - target: i686-pc-windows-msvc
            os: windows-latest
            python-architecture: x86
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: ${{ matrix.platform.python-architecture }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}
      - name: Build wheel (macOS universal2) and sdist
        if: matrix.platform.target == 'x86_64-apple-darwin'
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release -o dist --sdist
      - name: Build wheel (without sdist)
        if: matrix.platform.target != 'x86_64-apple-darwin'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{matrix.platform.target}}
          args: --release -o dist
      - name: Install wheel
        shell: bash
        run: |
          pip install --no-index --find-links dist/ --force-reinstall fontc
          which fontc
          fontc --version
      - name: Check sdist metadata
        if: matrix.platform.target == 'x86_64-apple-darwin'
        run: pipx run twine check dist/*.tar.gz
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: |
            dist/*.whl
            dist/*.tar.gz

  build_linux:
    name: Build ${{ matrix.platform.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - target: "x86_64-unknown-linux-musl"
            image_tag: "x86_64-musl"
            compatibility: "manylinux2010 musllinux_1_1"
          - target: "aarch64-unknown-linux-musl"
            image_tag: "aarch64-musl"
            compatibility: "manylinux2014 musllinux_1_1"
    container:
      image: docker://ghcr.io/rust-cross/rust-musl-cross:${{ matrix.platform.image_tag }}
    steps:
      # checkout@v3 doesn't work inside the manylinux container:
      # https://github.com/actions/checkout/issues/1487
      - uses: actions/checkout@v3
      - name: Build Wheels
        uses: PyO3/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: ${{ matrix.platform.compatibility }}
          container: off
          args: --release -o dist
      - name: Install x86_64 wheel
        if: startsWith(matrix.platform.target, 'x86_64')
        run: |
          /usr/bin/python3 -m pip install --no-index --find-links dist/ --force-reinstall fontc
          which fontc
          fontc --version
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: dist/*.whl

  upload:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, build_linux]
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      # https://blog.pypi.org/posts/2023-04-20-introducing-trusted-publishers/
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          # so that all artifacts are downloaded in the same directory specified by 'path'
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
